#############################################################
# Terraform Apply/Destroy
# 
# This pipeline will allow a Terraform template to be
# applied and destroyed.
#############################################################
name: 'Terraform CI'

trigger: 'none'
# trigger:
#   batch: true
#   branches:
#     include:
#     - master
#   paths:
#     include:
#     - 'infrastructure/terraform/vmss'

variables:
- group: 'shared-terraform'
## Contains:
## * terraformAzureSubscription
## * terraformStorageAccount
## * terraformWorkingDirectoryBase
## Set these variables on pipeline creation or uncomment and update in here if it will be static
- name: 'templateName'
  value: 'vmss'
# - name: 'terraformAdditionalArgs'
#   value: 'REPLACE_ME'
# - name: 'terraformApply'
#   value: 'false'
# - name: 'terraformDestroy'
#   value: false

pool:
  vmImage: 'ubuntu-latest'

stages:
# Template stage used to do a Terraform run.
# This cannot be reused due to jobs requiring unique names.
- template: '/.devops/pipelines/templates/terraformRun.tpl.stage.yml'
  parameters:
    terraformWorkingDirectory: '$(terraformWorkingDirectoryBase)/$(templateName)'
    terraformVersion: '0.12.28'
    azureSubscription: '$(terraformAzureSubscription)'
    terraformStorageAccount: '$(terraformStorageAccount)'
    terraformApply: '$(terraformApply)'
    terraformInputVariables:
      resource_prefix: '$(resourcePrefix)'
      vm_azdo_source_image_id: '$(vmAzdoSourceImageId)'

# Steps below will perform a DESTROY operation on existing infrastructure.
- stage: 'terraformDestroy'
  displayName: 'Terraform Destroy'
  condition: and(always(), eq(variables['terraformDestroy'], 'true'))
  variables:
    TF_IN_AUTOMATION: true

  jobs:
  - job: 'runTerraformDestroy'
    displayName: 'Terraform Destroy'
    steps:
    - template: '/.devops/pipelines/templates/terraformInitAzure.tpl.steps.yml'
      parameters:
        terraformWorkingDirectory: '$(terraformWorkingDirectoryBase)/$(templateName)'
        azureSubscription: '$(terraformAzureSubscription)'
        terraformStorageAccount: '$(terraformStorageAccount)'

    - task: Bash@3
      name: 'terraformDestroy'
      displayName: 'Terraform Destroy'
      inputs:
        targetType: 'inline'
        script: 'terraform destroy -input=false -auto-approve'
        workingDirectory: '$(terraformWorkingDirectoryBase)/$(templateName)'
      env:
        ARM_TENANT_ID: '$(ARM_TENANT_ID)'
        ARM_SUBSCRIPTION_ID: '$(ARM_SUBSCRIPTION_ID)'
        ARM_CLIENT_ID: '$(ARM_CLIENT_ID)'
        ARM_CLIENT_SECRET: '$(ARM_CLIENT_SECRET)'
        TF_VAR_resource_prefix: '$(resourcePrefix)'
        TF_VAR_vm_azdo_source_image_id: '$(vmAzdoSourceImageId)'
