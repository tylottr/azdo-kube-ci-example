#############################################################
# Terraform Init Steps
#
# This template contains a list of steps to set up Terraform
# ready for plan/apply phases.
# To use these steps outside of the template these can
# simply be copied out into another template e.g.
# job or stage template.
#############################################################
parameters:
- name: 'terraformVersion'
  type: 'string'
  default: '0.12.28'
- name: 'terraformWorkingDirectory'
  type: 'string'
  default: '$(Build.Repository.LocalPath)'
- name: 'terraformStateAzureSubscriptionName'
  type: 'string'
  default: ''
- name: 'terraformStateStorageAccountName'
  type: 'string'
  default: ''
- name: 'terraformWorkspace'
  type: 'string'
  default: ''
- name: 'sasTokenDuration'
  type: 'string'
  default: '2 hours'
- name: 'azureSubscription'
  type: 'string'
  default: ''

steps:
- task: TerraformInstaller@0
  name: 'install'
  displayName: 'Install Terraform'
  inputs:
    terraformVersion: '${{ parameters.terraformVersion }}'

- task: AzureCLI@2
  name: 'setup'
  displayName: 'Configure Terraform Authentication'
  inputs:
    azureSubscription: '${{ parameters.azureSubscription }}'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "Generating SAS token"
      end=`date --date "now + $sasTokenDuration" --utc "+%Y-%m-%dT%H:%MZ"`
      sas=`az storage container generate-sas --name tfstate \
        --expiry $end --https-only --permissions acdlrw --output tsv \
        --subscription "$terraformStateAzureSubscriptionName"`
      echo "##vso[task.setvariable variable=ARM_SAS_TOKEN;issecret=true]$sas"

      echo "Setting authentication details"
      echo "##vso[task.setvariable variable=ARM_TENANT_ID;issecret=true]$tenantId"
      echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID;issecret=true]`az account show --output tsv --query id`"
      echo "##vso[task.setvariable variable=ARM_CLIENT_ID;issecret=true]$servicePrincipalId"
      echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET;issecret=true]$servicePrincipalKey"
    workingDirectory: '${{ parameters.terraformWorkingDirectory }}'
    addSpnToEnvironment: true
  env:
    # AZURE_STORAGE_AUTH_MODE: 'login'
    AZURE_STORAGE_ACCOUNT: '${{ parameters.terraformStateStorageAccountName }}'
    terraformStateAzureSubscriptionName: '${{ parameters.terraformStateAzureSubscriptionName }}'
    sasTokenDuration: "${{ parameters.sasTokenDuration }}"

- task: Bash@3
  name: 'init'
  displayName: 'Terraform Init'
  inputs:
    targetType: 'inline'
    script: |
      terraform init -backend=true \
        -backend-config="storage_account_name=$AZURE_STORAGE_ACCOUNT" \
        -backend-config="sas_token=$ARM_SAS_TOKEN"

      if [ ! -z "$terraformWorkspace" ]; then
        terraform workspace select $terraformWorkspace || terraform workspace new $terraformWorkspace
      fi
    workingDirectory: '${{ parameters.terraformWorkingDirectory }}'
  env:
    ARM_SAS_TOKEN: '$(ARM_SAS_TOKEN)'
    AZURE_STORAGE_ACCOUNT: '${{ parameters.terraformStateStorageAccountName }}'
    terraformWorkspace: '${{ parameters.terraformWorkspace }}'

- task: Bash@3
  name: 'validate'
  displayName: 'Terraform Validate'
  inputs:
    targetType: 'inline'
    script: 'terraform validate'
    workingDirectory: '${{ parameters.terraformWorkingDirectory }}'
